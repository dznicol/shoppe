.details
  .left
    %dl
      %dt= t('shoppe.orders.name')
      %dd= @order.full_name
      %dt= t('shoppe.orders.company')
      %dd= @order.company.blank? ? '-' : @order.company
      %dt
        - if @order.separate_delivery_address?
          = t('shoppe.orders.billing_address')
        - else
          = t('shoppe.orders.billing_delivery_address')

      %dd= @order.billing_address1
      %dd= @order.billing_address2
      %dd= @order.billing_address3
      %dd= @order.billing_address4
      %dd= @order.billing_postcode
      %dd= @order.billing_country.try(:name)
      - if @order.separate_delivery_address?
        %dt= t('shoppe.orders.delivery_address')
        %dd= @order.delivery_name
        %dd= @order.delivery_address1
        %dd= @order.delivery_address2
        %dd= @order.delivery_address3
        %dd= @order.delivery_address4
        %dd= @order.delivery_postcode
        %dd= @order.delivery_country.try(:name)
  .right
    %dl
      %dt= t('shoppe.orders.email_address')
      %dd= mail_to @order.email_address
      %dt= t('shoppe.orders.telephone')
      %dd= @order.phone_number
      %dt= t('shoppe.orders.weight')
      %dd= number_to_weight @order.total_weight
      - if @order.received?
        %dt= t('shoppe.orders.build_time')
        %dd= distance_of_time_in_words(@order.created_at, @order.received_at)
      - if @order.invoiced?
        %dt= t('shoppe.orders.invoice_number')
        %dd= @order.invoice_number
      %dt= t('shoppe.orders.order_balance')
      %dd= boolean_tag @order.paid_in_full?, nil, :true_text => number_to_currency(@order.balance, unit: @order.currency_symbol), :false_text => number_to_currency(@order.balance, unit: @order.currency_symbol)
      %dt= t('shoppe.orders.customer')
      %dd= link_to @order.customer.try(:full_name).presence || t('shoppe.orders.n_a'), customer_path(@order.customer)
      %dt= "#{t('shoppe.orders.customer')} #{t('shoppe.orders.id')}"
      %dd= @order.customer.try(:id).presence || t('shoppe.orders.n_a')
      %dt= t('shoppe.orders.currency')
      %dd= @order.currency.presence || t('shoppe.orders.n_a')
      %dt= t('shoppe.orders.retailer')
      %dd= @order.retailer.try(:name).presence || t('shoppe.orders.any')
      - unless @order.onhold?
        - if @order.accepted? && !@order.shipped?
          = form_tag [:ship, @order] do
            %dl.form
              %dt.padding= label_tag 'delivery_service', t('shoppe.delivery_services.delivery_services')
              %dd= select_tag :delivery_service, options_from_collection_for_select(@order.available_delivery_services, 'id', 'name', @order.delivery_service.try(:id)), {class: 'chosen'}
            %dl.form
              %dt.padding= label_tag 'consignment_number', t('shoppe.orders.consignment_number')
              %dd= text_field_tag 'consignment_number', '', :class => 'text'
            %dl.form
              %dd= submit_tag t('shoppe.orders.mark_as_shipped') , :class => 'button green button-mini'

      - unless @order.accepted? || @order.rejected? || @order.onhold?
        %dl.form
          %dd
            = link_to t('shoppe.orders.accept'), [:accept, @order], :method => :post, :class => 'button green'
            = link_to t('shoppe.orders.reject'), [:reject, @order], :method => :post, :class => 'button purple'
          %dd
            = link_to t('shoppe.orders.hold'), [:hold, @order], :method => :post, :class => 'button orange'

      - if @order.onhold?
        %dl.form
          %dd
            = link_to t('shoppe.orders.unhold'), [:unhold, @order], :method => :post, :class => 'button orange'

    - if @order.shipped? and not @order.returned?
      %dl.form
        %dd
          = link_to t('shoppe.orders.return'), [:return, @order], :method => :post, :class => 'button purple', :data => {:confirm => t('shoppe.orders.return_confirmation') }
